/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Ei51Tewh6Nb
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { useRouter } from "next/navigation";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { ProductDetails } from "./product-details";
import { TabView } from "./tab-view";
import { Reviews } from "./reviews";
import { OtherProductsYouMayFindUseful } from "./other-products-you-may-find-useful";
import { ScrollArea } from "../ui/scroll-area";

export function ItemCard({ title, authors, price, cover } : { title: string, authors: string[], price: number, cover: string}) {
  const router = useRouter();
  function getAuthors(authors: string[]): string {
    return authors.join(", ");
  }
  return (
    <Card className="w-full max-w-sm">
      <Dialog>
        <DialogTrigger asChild>
          <img src={cover} alt="Book Image" className="object-cover mb-2 w-full cursor-pointer rounded-t-lg transition-all hover:scale-[103%]" />
        </DialogTrigger>
        <DialogContent className="min-w-[85%] my-16" onOpenAutoFocus={(e) => {e.preventDefault()}}>
          {/* <ScrollArea className="rounded-md border">
            <div className="p-0 sm:p-2"> */}
                <ProductDetails isModal={true} />
                <TabView />
                <Reviews />
                <OtherProductsYouMayFindUseful />
            {/* </div>
          </ScrollArea> */}
        </DialogContent>
      </Dialog>
      
      <CardContent className="flex flex-col items-center">
        <div className="text-md lg:text-lg font-semibold min-h-20 text-center">{title}</div>
        <div className="text-xs md:text-sm text-muted-foreground mb-2 min-h-8">{getAuthors(authors)}</div>
        <div className="text-lg font-bold mb-4">&#8377;{price}</div>
        <div className="flex space-x-4">
          <Button variant="ghost" size="icon">
            <HeartIcon className="w-6 h-6" />
          </Button>
          <Button variant="ghost" size="icon">
            <ShoppingCartIcon className="w-6 h-6" />
          </Button>
        </div>
      </CardContent>
    </Card>
  )
}

function HeartIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z" />
    </svg>
  );
}


function ShoppingCartIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="8" cy="21" r="1" />
      <circle cx="19" cy="21" r="1" />
      <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" />
    </svg>
  );
}


function XIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
